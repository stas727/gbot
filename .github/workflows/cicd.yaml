name: GBOT-CICD

on:
  push:
    branches:
      - 'develop'

env:
  TARGETARCH: amd64
  TARGETOS: linux
  REGISTRY: ghcr.io
  APP: "gbot"

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run test
        run: make test
      - name: Docker Hub Login
        run: echo "${{ secrets.REGISTRY_GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Make env
        uses: SpicyPizza/create-envfile@v2.0
        with:
          AI_TOKEN: ${{ secrets.AI_TOKEN }}
          TELE_TOKEN: ${{ secrets.TELE_TOKEN }}
          file_name: .env
          fail_on_empty: false
          sort_keys: false
      - name: Build&Push
        run: make image push REGISTRY=$REGISTRY/${{ github.repository_owner }} TARGETOS=$TARGETOS TARGETARCH=$TARGETARCH
  cd:
    name: CD
    needs: ci
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION) | .image.arch=strenv(TARGETARCH) | .image.os=strenv(TARGETOS) | .image.registry=strenv(REGISTRY)' helm/values.yaml
      - run: |
                git config user.name github-actions
                git config user.email github-actions@github.com
                git commit -am "update version $VERSION"
                git push